import{_ as i,c as a,o as e,a0 as n}from"./chunks/framework.MNVsvnY4.js";const g=JSON.parse('{"title":"Vector Databases - Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"vectordatabases/getting-started.md","filePath":"6. VectorDatabases/1. Getting-Started.md"}'),t={name:"vectordatabases/getting-started.md"};function l(h,s,p,k,r,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="vector-databases-getting-started" tabindex="-1">Vector Databases - Getting Started <a class="header-anchor" href="#vector-databases-getting-started" aria-label="Permalink to &quot;Vector Databases - Getting Started&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>LlmTornado provides integration with vector databases for semantic search, embeddings storage, and retrieval-augmented generation (RAG). Vector databases enable you to store and query high-dimensional vectors efficiently.</p><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes vitesse-light dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// Install the packages:</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// dotnet add package LlmTornado.VectorDatabases</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// dotnet add package LlmTornado.VectorDatabases.ChromaDB</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#C586C0;">using</span><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;"> LlmTornado</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#C586C0;">using</span><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;"> LlmTornado</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;">VectorDatabases</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// Initialize API and vector database</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;">TornadoApi</span><span style="--shiki-light:#59873A;--shiki-dark:#9CDCFE;"> api</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#569CD6;"> new</span><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;"> TornadoApi</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#CE9178;">your-api-key</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// Create embeddings</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;">List</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#569CD6;">float</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">[]&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#9CDCFE;"> embeddings</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#569CD6;"> await</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;"> api</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Embeddings</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#DCDCAA;">CreateEmbedding</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#569CD6;">    new</span><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;"> List</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#569CD6;">string</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;"> {</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#CE9178;">Hello world</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#CE9178;">AI is amazing</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;"> },</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">    ChatModel</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">OpenAi</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Embedding</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Ada002</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// Store in vector database (see ChromaDB documentation)</span></span></code></pre></div><h2 id="what-are-vector-databases" tabindex="-1">What are Vector Databases? <a class="header-anchor" href="#what-are-vector-databases" aria-label="Permalink to &quot;What are Vector Databases?&quot;">​</a></h2><p>Vector databases store data as high-dimensional vectors (embeddings) that capture semantic meaning. This enables:</p><ul><li><strong>Semantic Search</strong>: Find similar content by meaning, not just keywords</li><li><strong>RAG</strong>: Retrieve relevant context for AI responses</li><li><strong>Similarity Matching</strong>: Find similar items across large datasets</li><li><strong>Clustering</strong>: Group related items automatically</li></ul><h2 id="creating-embeddings" tabindex="-1">Creating Embeddings <a class="header-anchor" href="#creating-embeddings" aria-label="Permalink to &quot;Creating Embeddings&quot;">​</a></h2><h3 id="text-embeddings" tabindex="-1">Text Embeddings <a class="header-anchor" href="#text-embeddings" aria-label="Permalink to &quot;Text Embeddings&quot;">​</a></h3><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes vitesse-light dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;">TornadoApi</span><span style="--shiki-light:#59873A;--shiki-dark:#9CDCFE;"> api</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#569CD6;"> new</span><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;"> TornadoApi</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#CE9178;">your-api-key</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// Single text</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#569CD6;">float</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">[]</span><span style="--shiki-light:#59873A;--shiki-dark:#9CDCFE;"> embedding</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#569CD6;"> await</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;"> api</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Embeddings</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#DCDCAA;">CreateEmbedding</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#CE9178;">The quick brown fox</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">    ChatModel</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">OpenAi</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Embedding</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Ada002</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// Multiple texts</span></span>
<span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;">List</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#569CD6;">float</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">[]&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#9CDCFE;"> embeddings</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#AB5959;--shiki-dark:#569CD6;"> await</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;"> api</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Embeddings</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#DCDCAA;">CreateEmbedding</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">(</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#569CD6;">    new</span><span style="--shiki-light:#2E8F82;--shiki-dark:#4EC9B0;"> List</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#569CD6;">string</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#D4D4D4;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">    {</span><span style="--shiki-light:#393A34;--shiki-dark:#D4D4D4;"> </span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">        &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#CE9178;">First document</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">        &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#CE9178;">Second document</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">        &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#CE9178;">Third document</span><span style="--shiki-light:#B5695977;--shiki-dark:#CE9178;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">    },</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">    ChatModel</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">OpenAi</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Embedding</span><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#9CDCFE;">Ada002</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#D4D4D4;">);</span></span></code></pre></div><h3 id="multimodal-embeddings" tabindex="-1">Multimodal Embeddings <a class="header-anchor" href="#multimodal-embeddings" aria-label="Permalink to &quot;Multimodal Embeddings&quot;">​</a></h3><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes vitesse-light dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// Image and text embeddings (if supported by provider)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// Useful for image search and multimodal RAG</span></span></code></pre></div><h2 id="use-cases" tabindex="-1">Use Cases <a class="header-anchor" href="#use-cases" aria-label="Permalink to &quot;Use Cases&quot;">​</a></h2><h3 id="semantic-search" tabindex="-1">Semantic Search <a class="header-anchor" href="#semantic-search" aria-label="Permalink to &quot;Semantic Search&quot;">​</a></h3><p>Store document embeddings and find similar content:</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes vitesse-light dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 1. Embed documents</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 2. Store in vector database</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 3. Embed query</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 4. Find similar vectors</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 5. Return matching documents</span></span></code></pre></div><h3 id="rag-retrieval-augmented-generation" tabindex="-1">RAG (Retrieval-Augmented Generation) <a class="header-anchor" href="#rag-retrieval-augmented-generation" aria-label="Permalink to &quot;RAG (Retrieval-Augmented Generation)&quot;">​</a></h3><p>Enhance AI responses with relevant context:</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes vitesse-light dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 1. Embed user query</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 2. Retrieve relevant documents</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 3. Pass documents as context to AI</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 4. Generate informed response</span></span></code></pre></div><h3 id="document-clustering" tabindex="-1">Document Clustering <a class="header-anchor" href="#document-clustering" aria-label="Permalink to &quot;Document Clustering&quot;">​</a></h3><p>Group similar documents automatically:</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes vitesse-light dark-plus vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 1. Create embeddings for all documents</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 2. Use clustering algorithm</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A9955;">// 3. Group by similarity</span></span></code></pre></div><h2 id="supported-providers" tabindex="-1">Supported Providers <a class="header-anchor" href="#supported-providers" aria-label="Permalink to &quot;Supported Providers&quot;">​</a></h2><p>LlmTornado supports various embedding providers:</p><ul><li><strong>OpenAI</strong>: text-embedding-ada-002, text-embedding-3-small, text-embedding-3-large</li><li><strong>Google</strong>: Gecko embeddings</li><li><strong>Cohere</strong>: Embed v3</li><li><strong>Voyage AI</strong>: Voyage embeddings</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ul><li>Choose appropriate embedding models for your use case</li><li>Batch embedding requests for efficiency</li><li>Cache embeddings when possible</li><li>Consider embedding dimensions vs. performance trade-offs</li><li>Normalize vectors when required</li></ul><h2 id="related-topics" tabindex="-1">Related Topics <a class="header-anchor" href="#related-topics" aria-label="Permalink to &quot;Related Topics&quot;">​</a></h2><ul><li><a href="./2. ChromaDb">ChromaDB</a> - Using ChromaDB with LlmTornado</li><li><a href="./../1. LlmTornado/1. Chat/1. basics">Chat Basics</a></li></ul>`,30)]))}const D=i(t,[["render",l]]);export{g as __pageData,D as default};
