// <auto-generated />
using System;
using LlmTornado.Internal.Press.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LlmTornado.Internal.Press.Migrations
{
    [DbContext(typeof(PressDbContext))]
    [Migration("20251028192253_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.21");

            modelBuilder.Entity("LlmTornado.Internal.Press.Database.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageVariationsJson")
                        .HasColumnType("TEXT");

                    b.Property<int>("IterationCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Objective")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("QualityScore")
                        .HasColumnType("REAL");

                    b.Property<string>("Slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourcesJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WordCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("LlmTornado.Internal.Press.Database.Models.ArticleQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArticleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttemptCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<double>("EstimatedRelevance")
                        .HasColumnType("REAL");

                    b.Property<string>("IdeaSummary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("Priority");

                    b.HasIndex("ScheduledDate");

                    b.HasIndex("Status");

                    b.ToTable("ArticleQueue");
                });

            modelBuilder.Entity("LlmTornado.Internal.Press.Database.Models.TrendingTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArticleCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DiscoveredDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastSeenDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetadataJson")
                        .HasColumnType("TEXT");

                    b.Property<double>("Relevance")
                        .HasColumnType("REAL");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscoveredDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Relevance");

                    b.HasIndex("Topic");

                    b.ToTable("TrendingTopics");
                });

            modelBuilder.Entity("LlmTornado.Internal.Press.Database.Models.WorkHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArticleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Action");

                    b.HasIndex("ArticleId");

                    b.HasIndex("Timestamp");

                    b.ToTable("WorkHistory");
                });

            modelBuilder.Entity("LlmTornado.Internal.Press.Database.Models.WorkHistory", b =>
                {
                    b.HasOne("LlmTornado.Internal.Press.Database.Models.Article", "Article")
                        .WithMany("WorkHistory")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Article");
                });

            modelBuilder.Entity("LlmTornado.Internal.Press.Database.Models.Article", b =>
                {
                    b.Navigation("WorkHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
